name: Create Release

on:
  push:
    branches:
      - main  # Adjust this to your target branch

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: Determine Next Version
        id: next_version
        run: |
          # Get the latest tag
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          
          # Extract the version numbers
          IFS='.' read -ra VERSION_PARTS <<< "${latest_tag#v}"
          
          # Increment the patch version
          VERSION_PARTS[2]=$((VERSION_PARTS[2] + 1))
          
          # Join the version parts back together
          new_version="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          
          echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT
          echo "New version: $new_version"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.next_version.outputs.NEW_VERSION }}
          release_name: Release ${{ steps.next_version.outputs.NEW_VERSION }}
          body: |
            Auto-generated release for version ${{ steps.next_version.outputs.NEW_VERSION }}.
          draft: false
          prerelease: false
