name: Docker Image CI

on:
  release:
    types: [created, published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get release version
      id: get_version
      run: |
        # Extract the tag name from GITHUB_REF
        RELEASE_VERSION=${GITHUB_REF#refs/tags/}
        
        # Remove any leading 'v' if present
        RELEASE_VERSION=${RELEASE_VERSION#v}
        
        # Validate the version format
        if [[ ! $RELEASE_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Invalid version format: $RELEASE_VERSION"
          exit 1
        fi
        
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT
        echo "Release version: $RELEASE_VERSION"

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          jlevangie/lazydj:${{ steps.get_version.outputs.RELEASE_VERSION }}
          jlevangie/lazydj:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}